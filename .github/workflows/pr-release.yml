name: Release from Merged PR

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  create_release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate formatted release notes
        id: generate_notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMITS=$(git log --pretty=format:"%H|%s" --no-merges --reverse ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})
          
          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          echo "## What's Changed" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV

          echo "$COMMITS" | while read -r line; do
              commit_hash=$(echo "$line" | cut -d'|' -f1)
              commit_msg=$(echo "$line" | cut -d'|' -f2)
              
              # Use GitHub API to get the author's login
              # We're making a REST API call to get the commit details
              author_login=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                                 "https://api.github.com/repos/${{ github.repository }}/commits/$commit_hash" | jq -r '.author.login')

              # Default to the commit's name if a login isn't found
              if [ "$author_login" == "null" ]; then
                  author_name=$(git log -1 --pretty=format:"%an" "$commit_hash")
                  contributor_text=" by @${author_name}"
                  contributor_link="https://github.com/${author_name}"
              else
                  contributor_text=" by [@${author_login}](https://github.com/${author_login})"
              fi

              link="https://github.com/${{ github.repository }}/commit/${commit_hash}"
              
              if [[ "$commit_msg" =~ ^feat: ]]; then
                echo "* ✨ Feat: ${commit_msg:5} ${contributor_text} in ${link}" >> $GITHUB_ENV
              elif [[ "$commit_msg" =~ ^(fix|bug): ]]; then
                echo "* 🐛 Fix: ${commit_msg:4} ${contributor_text} in ${link}" >> $GITHUB_ENV
              elif [[ "$commit_msg" =~ ^(chore|refactor|style): ]]; then
                echo "* 🛠️ Maintenance: ${commit_msg:9} ${contributor_text} in ${link}" >> $GITHUB_ENV
              elif [[ "$commit_msg" =~ ^docs: ]]; then
                echo "* 📚 Docs: ${commit_msg:5} ${contributor_text} in ${link}" >> $GITHUB_ENV
              else
                echo "* ${commit_msg} ${contributor_text} in ${link}" >> $GITHUB_ENV
              fi
          done

          echo "" >> $GITHUB_ENV
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ github.event.pull_request.base.sha }}...${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create release tag
        id: create_tag
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "release-${{ github.run_number }}"
          name: "Release ${{ github.event.pull_request.title }}"
          body: ${{ env.RELEASE_BODY }}
          drop: true
