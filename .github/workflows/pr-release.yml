name: Release from Merged PR

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  create_release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read # Added permission to read PR data

    steps:
      - name: Get PR Commits
        id: pr_commits
        uses: tj-actions/pr-commits-to-json@v1.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pull_request: ${{ github.event.pull_request.number }}

      - name: Generate formatted release notes
        id: generate_notes
        run: |
          COMMITS=$(echo '${{ steps.pr_commits.outputs.commits }}' | jq -r '.[].commit.message')

          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          echo "## What's Changed" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV

          echo "$COMMITS" | awk 'NR==1{OFS=""} {print "* `[<link_to_commit>]` " $0}' | grep 'feat:' | sed 's/feat:/* ✨ Feat:/' >> $GITHUB_ENV
          echo "$COMMITS" | awk 'NR==1{OFS=""} {print "* `[<link_to_commit>]` " $0}' | grep -E '^(fix|bug):' | sed -E 's/^(fix|bug):/* 🐛 Fix:/' >> $GITHUB_ENV
          echo "$COMMITS" | awk 'NR==1{OFS=""} {print "* `[<link_to_commit>]` " $0}' | grep -E '^(chore|refactor|style):' | sed -E 's/^(chore|refactor|style):/* 🛠️ Maintenance:/' >> $GITHUB_ENV
          echo "$COMMITS" | awk 'NR==1{OFS=""} {print "* `[<link_to_commit>]` " $0}' | grep 'docs:' | sed 's/docs:/* 📚 Docs:/' >> $GITHUB_ENV
          
          echo "" >> $GITHUB_ENV
          echo "**Full Changelog**: ${{ github.event.pull_request.html_url }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create release tag
        id: create_tag
        uses: softprops/action-gh-release@v1

        with:
          tag_name: "release-${{ github.run_number }}"
          name: "Release ${{ github.event.pull_request.title }}"
          body: ${{ env.RELEASE_BODY }}
          drop: true
